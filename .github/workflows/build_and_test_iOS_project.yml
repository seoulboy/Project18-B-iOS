name: workflow1

on: pull_request


jobs:

  build:
    name: Build for testing - iPhone 12
    
    env:
      SCHEME: "GIthubActionTestProject"
      DEVICE: "iPhone 12"
      PROJECT: "GIthubActionTestProject.xcodeproj"
      DERIVED_DATA_PATH: "DerivedData"
      
    runs-on: macOS-latest
    
    steps:
    
    - name: Checkout project
      uses: actions/checkout@v1
    
    - name: Select Xcode 12
      run: sudo xcode-select -switch /Applications/Xcode_12.2.app
    
    - name: Build 
      run: |
        set -eo pipefail && xcodebuild clean \
                             -project $PROJECT \
                             -scheme $SCHEME \
                             -destination "platform=iOS Simulator,name=$DEVICE" \
                             -derivedDataPath $DERIVED_DATA_PATH \
                             build-for-testing | 
                             xcpretty --color --simple

    - name: Upload products
      uses: actions/upload-artifact@v2
      with:
        name: Products
        path: DerivedData/Build/Products

  unit_test:
    name: Unit Test - iPhone 12
    
    env:
      SCHEME: "GIthubActionTestProject"
      DEVICE: "iPhone 12"
      PROJECT: "GIthubActionTestProject.xcodeproj"
      DERIVED_DATA_PATH: "DerivedData"
    
    runs-on: macOS-latest
    
    needs: build
    steps:
    
    - name: Checkout project
      uses: actions/checkout@v1

    - name: Select Xcode 12
      run: sudo xcode-select -switch /Applications/Xcode_12.2.app
    
    - name: Download products
      uses: actions/download-artifact@v2
      with:
        name: Products
    
    - name: Run unit tests
      run: |
        set -o pipefail && xcodebuild test-without-building \
                            -xctestrun $(find . -type f -name "*.xctestrun") \
                            -destination "platform=iOS Simulator,name=$DEVICE" \
                            -derivedDataPath $DERIVED_DATA_PATH | 
                            xcpretty --color --simple
    
    - name: Upload test logs
      uses: actions/upload-artifact@v2
      with:
        name: TestLogs
        path: DerivedData/Logs/Test

  analyze:
    name: Static analyze
    env:
      DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
    runs-on: macOS-latest
    needs: unit_test
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
    - name: Download test logs
      uses: actions/download-artifact@v2
      with:
        name: TestLogs
    - name: Setup bundle
      run: |
        bundle install
    - name: Danger
      run: |
        bundle exec danger
